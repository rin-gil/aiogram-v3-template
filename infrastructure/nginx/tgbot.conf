# Nginx configuration to run the bot on the server in webhook mode

server {
    listen 80;
    server_name server.com; # Replace server.com with your domain name

    server_tokens off;

    access_log /var/log/nginx/access-tgbot.log;

    location / { return 301 https://$server_name$request_uri; }

    return 444;
}

server {
    listen 443 ssl http2;
    server_name server.com; # Replace server.com with your domain name

    root /usr/share/nginx/html/tgbot;

    ssl_certificate /etc/letsencrypt/live/server.com/fullchain.pem; # Replace server.com with your domain name
    ssl_certificate_key /etc/letsencrypt/live/server.com/privkey.pem; # Replace server.com with your domain name
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    server_tokens off;

    access_log /var/log/nginx/access-tgbot.log;

    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Robots-Tag "noindex, nofollow" always;

    location = /favicon.ico { access_log off; log_not_found off; }

    location / { return 444; }

    location /tgbot { # Replace WEBHOOK_TOKEN with its value from the .env file
            if ($http_x_telegram_bot_api_secret_token != "WEBHOOK_TOKEN") { return 444; }
            proxy_pass http://HOST:PORT; # Replace HOST and PORT with its values from the .env file
        }
}
